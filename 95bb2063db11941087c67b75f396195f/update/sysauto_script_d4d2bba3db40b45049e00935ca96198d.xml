<?xml version="1.0" encoding="UTF-8"?><record_update table="sysauto_script">
    <sysauto_script action="INSERT_OR_UPDATE">
        <active>true</active>
        <business_calendar/>
        <can_iterate>false</can_iterate>
        <condition/>
        <conditional>false</conditional>
        <entered_time/>
        <name>Update average cost on hardware model</name>
        <offset/>
        <offset_type>0</offset_type>
        <run_as display_value="">fb3baddcdb5027401c7af1286896196f</run_as>
        <run_as_tz/>
        <run_dayofmonth>1</run_dayofmonth>
        <run_dayofweek>1</run_dayofweek>
        <run_period>1970-01-02 00:00:00</run_period>
        <run_start>2021-05-17 04:00:00</run_start>
        <run_time>1970-01-01 07:00:00</run_time>
        <run_type>periodically</run_type>
        <script><![CDATA[//Detta schemalagda script används för att räkna ut snittpriset för en Hardware Model.
//Scriptet körs en gång om dagen och kollar igenom de (up till) 20 senaste skapade assetsen för en model. Summerar deras Cost och delar på antalet träffar. Checken körs mot assets som INTE har 0kr i cost samt oavsett status.
//Scriptet körs på alla Hardware model, så länge In Stock inte är tomt. (ej samma som 0)

var grHw = new GlideRecord('cmdb_hardware_product_model');
grHw.addQuery('status', 'In Production');
grHw.query();

while(grHw.next()) {
	var inStock = grHw.getValue('x_hak_price_calc_in_stock');

	if(inStock != '') {

		var grAsset = new GlideRecord('alm_asset');
		grAsset.addQuery('model', grHw.getUniqueValue());
		grAsset.addEncodedQuery('cost!=' + global.getCurrencyFilter('alm_asset','cost', 'SEK;0'));
		grAsset.orderByDesc('created');
		grAsset.setLimit(20);
		grAsset.query();

		var totalCost = 0;
		while (grAsset.next()) { 
			totalCost += parseFloat(grAsset.getValue('cost')); // går igenom alla records och summerar alla värden från fältet cost.
		}

		var averageCost;

		averageCost = totalCost / grAsset.getRowCount(); // räknar ut genomsnitts-inköpskostnaden för modellen, baserat på de som är i lager.

		var modelCost = parseFloat(grHw.getValue('x_hak_price_calc_average_cost'));

		if (averageCost != modelCost && averageCost > 0) {
			grHw.setValue('x_hak_price_calc_average_cost', averageCost); // sätter genomsnitts-inköpspriset till fältet x_hak_price_calc_average_cost
			grHw.update();
		}
	}
}
//gs.info('JJ Sluta script');]]></script>
        <source_filter/>
        <source_table/>
        <sys_class_name>sysauto_script</sys_class_name>
        <sys_created_by>jonatan.horvath@halmstad.se</sys_created_by>
        <sys_created_on>2021-05-17 14:24:57</sys_created_on>
        <sys_id>d4d2bba3db40b45049e00935ca96198d</sys_id>
        <sys_mod_count>20</sys_mod_count>
        <sys_name>Update average cost on hardware model</sys_name>
        <sys_package display_value="Price Calculation" source="x_hak_price_calc">95bb2063db11941087c67b75f396195f</sys_package>
        <sys_policy/>
        <sys_scope display_value="Price Calculation">95bb2063db11941087c67b75f396195f</sys_scope>
        <sys_update_name>sysauto_script_d4d2bba3db40b45049e00935ca96198d</sys_update_name>
        <sys_updated_by>jonatan.horvath@halmstad.se</sys_updated_by>
        <sys_updated_on>2021-05-19 09:14:45</sys_updated_on>
        <time_zone/>
        <upgrade_safe>false</upgrade_safe>
    </sysauto_script>
</record_update>
